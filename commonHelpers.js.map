{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\n\nlet intervalId;\nlet userSelectedDate;\nstartBtn.disabled = true;\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        theme: 'dark',\n        backgroundColor: 'red',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const diff = userSelectedDate - currentTime;\n\n    if (diff > 0) {\n      const time = convertMs(diff);\n\n      document.querySelector('[data-days]').textContent = addLeadingZero(\n        time.days\n      );\n      document.querySelector('[data-hours]').textContent = addLeadingZero(\n        time.hours\n      );\n      document.querySelector('[data-minutes]').textContent = addLeadingZero(\n        time.minutes\n      );\n      document.querySelector('[data-seconds]').textContent = addLeadingZero(\n        time.seconds\n      );\n\n      dateInput.disabled = true;\n      startBtn.disabled = true;\n    } else {\n      clearInterval(intervalId);\n      dateInput.disabled = false;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["dateInput","startBtn","intervalId","userSelectedDate","flatpickr","selectedDates","iziToast","currentTime","diff","time","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAKA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAEtD,IAAIC,EACAC,EACJF,EAAS,SAAW,GAEpBG,EAAUJ,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQK,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,EAAmB,KAAK,OAC1BG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,MAAO,OACP,gBAAiB,MACjB,SAAU,UAClB,CAAO,EACDL,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACvCC,EAAa,YAAY,IAAM,CAC7B,MAAMK,EAAc,KAAK,MACnBC,EAAOL,EAAmBI,EAEhC,GAAIC,EAAO,EAAG,CACZ,MAAMC,EAAOC,EAAUF,CAAI,EAE3B,SAAS,cAAc,aAAa,EAAE,YAAcG,EAClDF,EAAK,IACb,EACM,SAAS,cAAc,cAAc,EAAE,YAAcE,EACnDF,EAAK,KACb,EACM,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EACrDF,EAAK,OACb,EACM,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EACrDF,EAAK,OACb,EAEMT,EAAU,SAAW,GACrBC,EAAS,SAAW,EAC1B,MACM,cAAcC,CAAU,EACxBF,EAAU,SAAW,EAExB,EAAE,GAAI,CACT,CAAC,EAED,SAASU,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}